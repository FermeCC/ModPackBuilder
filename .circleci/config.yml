version: 2
jobs:
  build:
    docker:
      - image: ubuntu:18.10
    steps:
      - checkout
      - run:
          name: Installing QOL utils
          command: |
            apt-get -qq update
            apt-get -qq install -y wget unzip xmlstarlet less
      - run:
          name: Installing nsis
          command: |
            apt-get -qq update
            apt-get -qq install -y nsis
      # - run:
      #     name: Installing nsisbi
      #     command: |
      #       apt-get -qq install -y build-essential scons zlib1g-dev
      #       mkdir -p nsisbi

      #       # from https://nsis.sourceforge.io/Zlib
      #       wget https://nsis.sourceforge.io/mediawiki/images/b/bb/Zlib-1.2.8-win64-AMD64.zip -P /tmp/
      #       unzip /tmp/Zlib-1.2.8-win64-AMD64.zip -d nsisbi/zlib
            
      #       wget https://iweb.dl.sourceforge.net/project/nsisbi/nsisbi3.04.2/nsis-code-7069-2-NSIS-trunk.zip -P /tmp/
      #       unzip /tmp/nsis-code-7069-2-NSIS-trunk.zip -d nsisbi
            
      #       export ZLIB_W32=/root/project/nsisbi scons
      #       (cd ~/project/nsisbi/nsis-code-7069-2-NSIS-trunk && scons SKIPSTUBS=all SKIPPLUGINS=all SKIPUTILS=all SKIPMISC=all NSIS_CONFIG_CONST_DATA_PATH=no PREFIX=. install-compiler)
      - run:
          name: Prepare folders
          command: |
            mkdir -p build
            mkdir -p mods
      - run:
          name: Retrieve and extract master archive
          command: |
            wget https://s3.amazonaws.com/dropbox.s3.ncode.ca/FermeCC/all_mods_download.zip -P build/
            unzip build/all_mods_download.zip -d mods
      - run:
          name: Compile installer
          command: |
            export NSISDIR=/usr/share/nsis
            makensis installer.nsi
            # nsisbi/nsis-code-7069-2-NSIS-trunk/makensis installer.nsi
      # - run:
      #     name: AV scan
      #     command: |
      #       apt-get -qq update
      #       apt-get -qq install -y clamav
      #       freshclam --quiet
      #       clamscan -r *.exe mods/*
      - run:
          name: Build Release Notes
          command: ./build_release_notes.sh release_stub.txt
      - run:
          name: Repack to 7z
          command: |
            apt-get -qq update
            apt-get -qq install -y p7zip-full
            (cd mods && 7za a -m0=lzma2 -mx=2 -mmt4 ../build/all_mods_download.7z *.zip)
      - run:
          name: Package and Release to Amazon S3
          command: |
            apt-get -qq update
            # noninteractive needed otherwize tz-data asks questions
            DEBIAN_FRONTEND=noninteractive apt-get -qq install -y awscli

            MODPACK_VERSION=$(date +%F_%H%M%S)
            aws s3 cp release_stub.txt            s3://${RELEASE_BUCKET}/${MODPACK_VERSION}/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
            aws s3 cp FermeCC_ModPack.exe         s3://${RELEASE_BUCKET}/${MODPACK_VERSION}/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
            aws s3 cp build/all_mods_download.zip s3://${RELEASE_BUCKET}/${MODPACK_VERSION}/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
            aws s3 cp build/all_mods_download.7z  s3://${RELEASE_BUCKET}/${MODPACK_VERSION}/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
            aws s3 cp --recursive s3://${RELEASE_BUCKET}/${MODPACK_VERSION}/ s3://${RELEASE_BUCKET}/latest/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
      # - run:
      #     name: Package and Release to Github
      #     command: |
      #       MODPACK_VERSION=$(date +%F_%H%M%S)
      #       FILENAME=FermeCC_ModPack.exe

      #       cp $FILENAME build/

      #       wget https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_amd64.tar.gz
      #       tar -zxvf ghr_v0.12.0_linux_amd64.tar.gz
      #       ghr_v0.12.0_linux_amd64/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -b "$(< release_stub.txt)" -delete ${MODPACK_VERSION} build/
